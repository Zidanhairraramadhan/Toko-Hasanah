document.addEventListener('DOMContentLoaded', function() {
    let allProducts = [];
    const API_URL = 'http://localhost:3000/api/products';
    const SERVER_URL = 'http://localhost:3000';

    const productsGrid = document.getElementById('productsGrid');
    const searchInput = document.getElementById('searchInput');
    const categoryFilter = document.getElementById('categoryFilter');

    async function fetchData() {
        if (!productsGrid) return; // Hanya jalankan jika ada di halaman produk
        try {
            const response = await fetch(API_URL);
            if (!response.ok) throw new Error('Server tidak merespon. Pastikan server backend berjalan.');
            allProducts = await response.json();
            populateFilter();
            renderProducts(allProducts);
        } catch (error) {
            productsGrid.innerHTML = `<p style="color: red; grid-column: 1 / -1; text-align: center;">${error.message}</p>`;
        }
    }

    function populateFilter() {
        const categories = [...new Set(allProducts.map(p => p.category).filter(Boolean))];
        categoryFilter.innerHTML = '<option value="all">Semua Kategori</option>'; // Reset
        categories.forEach(category => {
            const option = document.createElement('option');
            option.value = category;
            option.textContent = category;
            categoryFilter.appendChild(option);
        });
    }

    function renderProducts(products) {
        productsGrid.innerHTML = '';
        if (products.length === 0) {
            productsGrid.innerHTML = `<p style="grid-column: 1 / -1; text-align: center;">Produk tidak ditemukan.</p>`;
            return;
        }
        products.forEach(product => {
            const priceHTML = product.discount ? `<s>Rp${product.discount.toLocaleString('id-ID')}</s> <h3 class="product-price-final">Rp${product.price.toLocaleString('id-ID')}</h3>` : `<h3 class="product-price-final">Rp${product.price.toLocaleString('id-ID')}</h3>`;
            const imageSrc = product.image ? `${SERVER_URL}/${product.image}` : 'images/default.png';
            
            productsGrid.innerHTML += `
                <div class="product">
                    <div class="product-header">
                        <img src="${imageSrc}" alt="${product.name}" loading="lazy">
                    </div>
                    <div class="product-footer">
                        <p class="product-category">${product.category || 'Tanpa Kategori'}</p>
                        <h3 class="product-name">${product.name}</h3>
                        <div class="product-price">${priceHTML}</div>
                        <p>Stok: ${product.stock}</p>
                    </div>
                </div>
            `;
        });
    }

    function filterAndRender() {
        let filtered = [...allProducts];
        const searchTerm = searchInput.value.toLowerCase();
        const selectedCategory = categoryFilter.value;

        if (searchTerm) {
            filtered = filtered.filter(p => p.name.toLowerCase().includes(searchTerm));
        }
        if (selectedCategory !== 'all') {
            filtered = filtered.filter(p => p.category === selectedCategory);
        }
        renderProducts(filtered);
    }
    
    if (searchInput) searchInput.addEventListener('input', filterAndRender);
    if (categoryFilter) categoryFilter.addEventListener('change', filterAndRender);
    
    fetchData();
});